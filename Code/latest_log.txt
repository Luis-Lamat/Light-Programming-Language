
[Sat Apr  9 23:33:13 CDT 2016] =========================================== 
WARNING: Token 'VAR_FRACTION' defined, but not used
WARNING: Token 'FRACTION' defined, but not used
WARNING: Token 'VAR_BOOLEAN' defined, but not used
WARNING: There are 3 unused tokens
Generating LALR tables
WARNING: 7 shift/reduce conflicts
WARNING: 13 reduce/reduce conflicts
WARNING: reduce/reduce conflict in state 278 resolved using rule (print_a -> VAR_IDENTIFIER verify_variable)
WARNING: rejected rule (push_id -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 354 resolved using rule (assgn_a -> VAR_IDENTIFIER verify_variable push_id)
WARNING: rejected rule (var_cte -> VAR_IDENTIFIER verify_variable push_id) in state 354
> Operand Stack = []
> Operator Stack = []
Empty Stack
ASSIGN A: 17
assignment: 17
Empty Stack
factor: 17
term: 17
exp: 17
factor: 17
term: 17
exp: 17
> Operand Stack = [1000]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
expresion: 17
expresion: 17
condition: 17
print 19
doBlock 21
conditionBlock 21
factor: 21
term: 21
exp: 21
factor: 21
term: 21
exp: 21
> Operand Stack = [1000, 1001]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
expresion: 21
expresion: 21
factor: 21
factor: 21
> Operand Stack = [1000, 1001, 3001]
> Operator Stack = [10, 12, 12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
term: 21
term: 21
exp: 21
expresion: 21
condition: 21
factor: 21
term: 21
exp: 21
factor: 21
term: 21
exp: 21
> Operand Stack = [1000, 1001, 1002]
> Operator Stack = [10, 12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
expresion: 21
expresion: 21
condition: 21
factor: 21
term: 21
exp: 21
expresion: 21
> Operand Stack = [1000, 1003]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
condition: 21
condition: 21
print 23
doBlock 26
conditionBlock 26
factor: 26
term: 26
factor: 26
term: 26
> Operand Stack = [1000, 1003, 3002]
> Operator Stack = [12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
exp: 26
exp: 26
factor: 26
term: 26
exp: 26
> Operand Stack = [1000, 1003, 1004]
> Operator Stack = [12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
expresion: 26
expresion: 26
condition: 26
factor: 26
term: 26
exp: 26
expresion: 26
factor: 26
term: 26
exp: 26
factor: 26
term: 26
exp: 26
> Operand Stack = [1000, 1003, 1004, 1005]
> Operator Stack = [10, 12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
expresion: 26
expresion: 26
factor: 26
term: 26
exp: 26
factor: 26
term: 26
exp: 26
> Operand Stack = [1000, 1003, 1004, 1005, 1006]
> Operator Stack = [10, 12, 11]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
expresion: 26
expresion: 26
> Operand Stack = [1000, 1003, 1004, 1007]
> Operator Stack = [10, 12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
condition: 26
condition: 26
factor: 26
term: 26
exp: 26
expresion: 26
> Operand Stack = [1000, 1003, 1008]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
factor: 26
term: 26
exp: 26
factor: 26
term: 26
exp: 26
> Operand Stack = [1000, 1003, 1008, 1009]
> Operator Stack = [10]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
expresion: 26
expresion: 26
> Operand Stack = [1000, 1003, 1010]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
factor: 26
term: 26
exp: 26
factor: 26
term: 26
exp: 26
> Operand Stack = [1000, 1003, 1010, 1011]
> Operator Stack = [11]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
expresion: 26
expresion: 26
> Operand Stack = [1000, 1003, 1012]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
condition: 26
condition: 26
condition: 26
condition: 26
print 28
doBlock 30
conditionBlock 30
okokok
3
factor: 37
term: 37
exp: 37
factor: 37
term: 37
exp: 37
> Operand Stack = [1000, 1003, 1012, 1000]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
expresion: 37
expresion: 37
condition: 37
print 39
doBlock 41
conditionBlock 41
print 42
factor: 43
term: 43
exp: 43
print 47
print 52
okokok
2
factor: 54
term: 54
factor: 55
term: 55
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
exp: 55
exp: 55
okokok
2
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001]
> Operator Stack = []
Empty Stack
factor: 69
term: 69
exp: 69
doBlock 71
cycle: 71
factor: 72
term: 72
exp: 72
okokok
2
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum']
> Operator Stack = []
Empty Stack
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum']
> Operator Stack = []
Empty Stack
factor: 77
term: 77
exp: 77
factor: 77
term: 77
exp: 77
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
expresion: 77
expresion: 77
condition: 77
for77
factor: 78
term: 78
exp: 78
factor: 78
term: 78
exp: 78
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
expresion: 78
expresion: 78
condition: 78
print 80
doBlock 81
conditionBlock 81
factor: 81
term: 81
factor: 82
term: 82
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'sum', 2004]
> Operator Stack = [14]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
exp: 82
exp: 82
ASSIGN A: 82
assignment: 82
Empty Stack
factor: 83
term: 83
exp: 83
factor: 83
term: 83
factor: 84
term: 84
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 2005]
> Operator Stack = [14]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
exp: 84
exp: 84
ASSIGN A: 84
assignment: 84
Empty Stack
factor: 85
term: 85
exp: 85
doBlock 86
cycle: 86
print 87
print 88
factor: 89
term: 89
exp: 89
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum']
> Operator Stack = []
Function queue
test: 92
Empty Stack
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum']
> Operator Stack = []
Empty Stack
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum']
> Operator Stack = []
Empty Stack
Function queue
test: 97
Function queue
test: 100
Function queue
test: 107
print 110
Function queue
test: 110
print 114
Function queue
test: 114
Function queue
test: 115
factor: 121
term: 121
exp: 121
factor: 121
term: 121
exp: 121
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum', '"hello"', 10, 20, 10, 20, 1000, 1000, 100, 100, 1000]
> Operator Stack = []
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
expresion: 121
expresion: 121
condition: 121
factor: 123
term: 123
exp: 123
ASSIGN A: 123
assignment: 123
Empty Stack
doBlock 124
conditionBlock 124
factor: 124
factor: 124
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum', '"hello"', 10, 20, 10, 20, 1000, 1000, 100, 100, 1000, 2003]
> Operator Stack = [12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
[14, 0, None, 'xpos']
[2, 7, 8, 2003]
factor: 124
term: 124
factor: 124
term: 124
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum', '"hello"', 10, 20, 10, 20, 1000, 1000, 100, 100, 1000, 2003, 2004]
> Operator Stack = [12, 3, 12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
[14, 0, None, 'xpos']
[2, 7, 8, 2003]
[0, 9, 9, 2004]
exp: 124
exp: 124
expresion: 124
condition: 124
factor: 124
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum', '"hello"', 10, 20, 10, 20, 1000, 1000, 100, 100, 1000, 2005]
> Operator Stack = [12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
[14, 0, None, 'xpos']
[2, 7, 8, 2003]
[0, 9, 9, 2004]
[3, 2003, 2004, 2005]
factor: 124
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum', '"hello"', 10, 20, 10, 20, 1000, 1000, 100, 100, 1000, 2006]
> Operator Stack = [12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
[14, 0, None, 'xpos']
[2, 7, 8, 2003]
[0, 9, 9, 2004]
[3, 2003, 2004, 2005]
[2, 2005, 5, 2006]
factor: 124
> Operand Stack = [1000, 1003, 1012, 1000, 0, 2001, 1, 'sum', 1000, 1001, 'index', 'sum', 'sum', '"hello"', 10, 20, 10, 20, 1000, 1000, 100, 100, 1000, 2007]
> Operator Stack = [12]
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
[14, 0, None, 'xpos']
[2, 7, 8, 2003]
[0, 9, 9, 2004]
[3, 2003, 2004, 2005]
[2, 2005, 5, 2006]
[3, 2006, 2, 2007]
term: 124
term: 124
term: 124
term: 124
term: 124
exp: 124
expresion: 124
condition: 124
factor: 125
term: 125
exp: 125
factor: 126
term: 126
exp: 126
doBlock 128
cycle: 128
factor: 131
term: 131
exp: 131
factor: 131
term: 131
exp: 131
factor: 132
term: 132
exp: 132
factor: 132
term: 132
exp: 132
factor: 133
term: 133
exp: 133
factor: 133
term: 133
exp: 133
factor: 140
term: 140
exp: 140
factor: 140
term: 140
exp: 140
factor: 141
term: 141
exp: 141
factor: 141
term: 141
exp: 141
factor: 142
term: 142
exp: 142
factor: 142
term: 142
exp: 142
factor: 149
term: 149
exp: 149
factor: 157
term: 157
exp: 157
factor: 158
term: 158
exp: 158
factor: 159
term: 159
exp: 159
factor: 161
term: 161
exp: 161
factor: 163
term: 163
exp: 163
factor: 164
term: 164
exp: 164
factor: 165
term: 165
exp: 165
factor: 167
term: 167
exp: 167
factor: 169
term: 169
exp: 169
factor: 170
term: 170
exp: 170
factor: 172
term: 172
exp: 172
factor: 174
term: 174
exp: 174
factor: 176
term: 176
exp: 176
factor: 178
term: 178
exp: 178
factor: 180
term: 180
exp: 180
sumNumbers:
	id: 8,
	name: sumNumbers,
	type: 2
	VAR - index:
		id: 2003,
		name: index,
		type: 2,
		value: None
		---------
	VAR - sum:
		id: 2002,
		name: sum,
		type: 2,
		value: None
		---------
	VAR - last:
		id: 2001,
		name: last,
		type: 2,
		value: None
		---------
	VAR - first:
		id: 2000,
		name: first,
		type: 2,
		value: None
		---------
printArray:
	id: 6,
	name: printArray,
	type: 0
	VAR - numbers:
		id: 2000,
		name: numbers,
		type: 2,
		value: None
		---------
sumTimes:
	id: 7,
	name: sumTimes,
	type: 2
	VAR - sum:
		id: 2002,
		name: sum,
		type: 2,
		value: None
		---------
	VAR - last:
		id: 2001,
		name: last,
		type: 2,
		value: None
		---------
	VAR - first:
		id: 2000,
		name: first,
		type: 2,
		value: None
		---------
sayText:
	id: 4,
	name: sayText,
	type: 0
	VAR - text:
		id: 4000,
		name: text,
		type: 4,
		value: None
		---------
	VAR - exam:
		id: 4001,
		name: exam,
		type: 4,
		value: None
		---------
addOne:
	id: 5,
	name: addOne,
	type: 2
	VAR - number:
		id: 2000,
		name: number,
		type: 2,
		value: None
		---------
example:
	id: 2,
	name: example,
	type: 3
	VAR - y:
		id: 2001,
		name: y,
		type: 2,
		value: None
		---------
	VAR - x:
		id: 2000,
		name: x,
		type: 2,
		value: None
		---------
	VAR - z:
		id: 3000,
		name: z,
		type: 3,
		value: None
		---------
program:
	id: 0,
	name: program,
	type: 0
	VAR - a:
		id: 2000,
		name: a,
		type: 2,
		value: None
		---------
	VAR - arr:
		ARRAY! 
		id: 2001,
		name: arr,
		type: 2,
		length: 0
		[]
		---------
	VAR - global:
		id: 2002,
		name: global,
		type: 2,
		value: None
		---------
	VAR - arr2:
		ARRAY! 
		id: 3000,
		name: arr2,
		type: 3,
		length: 9
		[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
		---------
light:
	id: 9,
	name: light,
	type: 0
	VAR - numberOne:
		id: 2000,
		name: numberOne,
		type: 2,
		value: None
		---------
	VAR - xpos:
		id: 2001,
		name: xpos,
		type: 2,
		value: None
		---------
	VAR - ypos:
		id: 2002,
		name: ypos,
		type: 2,
		value: None
		---------
noRetArg:
	id: 3,
	name: noRetArg,
	type: 0
	VAR - num:
		id: 2000,
		name: num,
		type: 2,
		value: None
		---------
	VAR - num2:
		id: 2001,
		name: num2,
		type: 2,
		value: None
		---------
verifyAndOr:
	id: 1,
	name: verifyAndOr,
	type: 0
	VAR - a:
		id: 4000,
		name: a,
		type: 4,
		value: None
		---------
Quads ===============================
[14, 0, None, 'global']
[14, '"LOL"', None, 'a']
[4, 2, 3, 1000]
[4, 1, 2, 1001]
[2, 3, 4.8, 3001]
[5, 3001, 9, 1002]
[10, 1001, 1002, 1003]
[0, 1, 4.0, 3002]
[5, 3002, 5, 1004]
[9, 4, 2, 1005]
[5, 4, 3, 1006]
[11, 1005, 1006, 1007]
[10, 1004, 1007, 1008]
[7, 5, 2, 1009]
[10, 1008, 1009, 1010]
[5, 4, 3, 1011]
[11, 1010, 1011, 1012]
[4, 1, 2, 1000]
[0, 'number', 1, 2001]
[14, 0, None, 'sum']
[14, 0, None, 'sum']
[14, 0, None, 'index']
[4, 'index', 'sum', 1000]
[5, 'sum', 2, 1001]
[0, 23, 'index', 2004]
[14, 2004, None, 'sum']
[0, 'sum', 'index', 2005]
[14, 2005, None, 'sum']
[14, 25, None, 'numberOne']
[14, 0, None, 'xpos']
[14, 0, None, 'ypos']
[5, 3, 5, 1000]
[14, 0, None, 'xpos']
[2, 7, 8, 2003]
[0, 9, 9, 2004]
[3, 2003, 2004, 2005]
[2, 2005, 5, 2006]
[3, 2006, 2, 2007]
Successful
