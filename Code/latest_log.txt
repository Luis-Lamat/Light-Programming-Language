\n[Wed Apr 13 00:26:59 CDT 2016] =========================================== 
WARNING: Token 'VAR_FRACTION' defined, but not used
WARNING: Token 'FRACTION' defined, but not used
WARNING: Token 'VAR_BOOLEAN' defined, but not used
WARNING: light_parser.py:731: Rule 'condition_block' defined, but not used
WARNING: There are 3 unused tokens
WARNING: There is 1 unused rule
WARNING: Symbol 'condition_block' is unreachable
Generating LALR tables
WARNING: 7 shift/reduce conflicts
WARNING: 41 reduce/reduce conflicts
WARNING: reduce/reduce conflict in state 311 resolved using rule (var_cte -> VAR_IDENTIFIER verify_variable push_id)
WARNING: rejected rule (print_a -> VAR_IDENTIFIER verify_variable push_id) in state 311
WARNING: reduce/reduce conflict in state 324 resolved using rule (var_cte -> VAR_INT push_num)
WARNING: rejected rule (inc_var_cte -> VAR_INT push_num) in state 324
WARNING: reduce/reduce conflict in state 343 resolved using rule (var_cte -> VAR_IDENTIFIER verify_variable push_id)
WARNING: rejected rule (inc_var_cte -> VAR_IDENTIFIER verify_variable push_id) in state 343
WARNING: reduce/reduce conflict in state 361 resolved using rule (assgn_a -> VAR_IDENTIFIER verify_variable push_id)
WARNING: rejected rule (var_cte -> VAR_IDENTIFIER verify_variable push_id) in state 361
WARNING: Rule (print_a -> VAR_IDENTIFIER verify_variable push_id) is never reduced
WARNING: Rule (inc_var_cte -> VAR_INT push_num) is never reduced
WARNING: Rule (inc_var_cte -> VAR_IDENTIFIER verify_variable push_id) is never reduced
> Operand Stack = []
> Operator Stack = []
> Type Stack = []
------------------------------------------> 1
factor: 20
term: 20
exp: 20
ASSIGN A: 20
assignment: 20
factor: 22
term: 22
exp: 22
ASSIGN A: 22
assignment: 22
+=
factor: 23
term: 23
exp: 23
+=
> Operand Stack = ['j', 2005]
> Operator Stack = []
> Type Stack = [2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
+=
factor: 25
term: 25
exp: 25
+=
> Operand Stack = ['i', 2006]
> Operator Stack = []
> Type Stack = [2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
ASSIGN A: 32
assignment: 32
factor: 32
term: 32
exp: 32
factor: 32
term: 32
exp: 32
> Operand Stack = [1000]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
expresion: 32
expresion: 32
condition: 32
PUSH JUMP :
[9]
ASSIGN A: 35
assignment: 35
print 36
doBlock 37
ASSIGN A: 39
assignment: 39
print 40
doBlock 42
[12]
12
ASSIGN A: 45
assignment: 45
factor: 45
term: 45
exp: 45
factor: 45
term: 45
exp: 45
> Operand Stack = [1001]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
expresion: 45
expresion: 45
condition: 45
PUSH JUMP :
[17]
ASSIGN A: 48
assignment: 48
print 49
doBlock 50
[17]
17
factor: 50
term: 50
exp: 50
factor: 50
term: 50
exp: 50
> Operand Stack = [1002]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
expresion: 50
expresion: 50
condition: 50
PUSH JUMP :
[21]
ASSIGN A: 52
assignment: 52
print 53
doBlock 54
ASSIGN A: 56
assignment: 56
doBlock 58
[24]
24
ASSIGN A: 60
assignment: 60
factor: 60
term: 60
exp: 60
factor: 60
term: 60
exp: 60
> Operand Stack = [1003]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
expresion: 60
expresion: 60
factor: 60
factor: 60
> Operand Stack = [1003, 3001]
> Operator Stack = [10, 12, 12]
> Type Stack = [1, 3]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
term: 60
term: 60
exp: 60
expresion: 60
condition: 60
factor: 60
term: 60
exp: 60
factor: 60
term: 60
exp: 60
> Operand Stack = [1003, 1004]
> Operator Stack = [10, 12]
> Type Stack = [1, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
expresion: 60
expresion: 60
condition: 60
factor: 60
term: 60
exp: 60
expresion: 60
> Operand Stack = [1005]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
condition: 60
condition: 60
PUSH JUMP :
[31]
ASSIGN A: 62
assignment: 62
print 63
doBlock 66
[31]
31
factor: 66
term: 66
factor: 66
term: 66
> Operand Stack = [3002]
> Operator Stack = [12]
> Type Stack = [3]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
exp: 66
exp: 66
factor: 66
term: 66
exp: 66
> Operand Stack = [1006]
> Operator Stack = [12]
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
expresion: 66
expresion: 66
condition: 66
factor: 66
term: 66
exp: 66
expresion: 66
factor: 66
term: 66
exp: 66
factor: 66
term: 66
exp: 66
> Operand Stack = [1006, 1007]
> Operator Stack = [10, 12]
> Type Stack = [1, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
expresion: 66
expresion: 66
factor: 66
term: 66
exp: 66
factor: 66
term: 66
exp: 66
> Operand Stack = [1006, 1007, 1008]
> Operator Stack = [10, 12, 11]
> Type Stack = [1, 1, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
expresion: 66
expresion: 66
> Operand Stack = [1006, 1009]
> Operator Stack = [10, 12]
> Type Stack = [1, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
condition: 66
condition: 66
factor: 66
term: 66
exp: 66
expresion: 66
> Operand Stack = [1010]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
factor: 66
term: 66
exp: 66
factor: 66
term: 66
exp: 66
> Operand Stack = [1010, 1011]
> Operator Stack = [10]
> Type Stack = [1, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
expresion: 66
expresion: 66
> Operand Stack = [1012]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
factor: 66
term: 66
exp: 66
factor: 66
term: 66
exp: 66
> Operand Stack = [1012, 1013]
> Operator Stack = [11]
> Type Stack = [1, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
expresion: 66
expresion: 66
> Operand Stack = [1014]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
condition: 66
condition: 66
condition: 66
condition: 66
PUSH JUMP :
[44]
print 68
doBlock 70
[44]
44
------------------------------------------> 47
------------------------------------------> 48
okokok
3
factor: 78
term: 78
exp: 78
factor: 78
term: 78
exp: 78
> Operand Stack = [1000]
> Operator Stack = []
> Type Stack = [1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
expresion: 78
expresion: 78
condition: 78
PUSH JUMP :
[49]
print 80
doBlock 82
[49]
49
print 83
factor: 84
term: 84
exp: 84
------------------------------------------> 53
factor: 87
term: 87
exp: 87
print 88
------------------------------------------> 55
factor: 92
term: 92
exp: 92
print 93
------------------------------------------> 57
okokok
2
factor: 95
term: 95
factor: 96
term: 96
> Operand Stack = [0, 2001]
> Operator Stack = []
> Type Stack = [2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
exp: 96
exp: 96
------------------------------------------> 59
------------------------------------------> 60
okokok
2
> Operand Stack = [0, 2001]
> Operator Stack = []
> Type Stack = [2, 2]
+=
factor: 110
term: 110
exp: 110
+=
> Operand Stack = [0, 2001, 'sum', 2003]
> Operator Stack = []
> Type Stack = [2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
doBlock 112
cycle: 112
factor: 113
term: 113
exp: 113
------------------------------------------> 64
okokok
2
> Operand Stack = [0, 2001, 'sum']
> Operator Stack = []
> Type Stack = [2, 2, 2]
> Operand Stack = [0, 2001, 'sum']
> Operator Stack = []
> Type Stack = [2, 2, 2]
ASSIGN A: 120
assignment: 120
ASSIGN A: 120
assignment: 120
factor: 120
term: 120
exp: 120
factor: 120
term: 120
exp: 120
> Operand Stack = [0, 2001, 'sum', 1000]
> Operator Stack = []
> Type Stack = [2, 2, 2, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
expresion: 120
expresion: 120
condition: 120
+=
factor: 120
term: 120
exp: 120
+=
> Operand Stack = [0, 2001, 'sum', 'index', 2004]
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, None]
70:	[0, 'index', 1, 2004]
ASSIGN A: 122
assignment: 122
factor: 122
term: 122
exp: 122
factor: 122
term: 122
exp: 122
> Operand Stack = [0, 2001, 'sum', 1001]
> Operator Stack = []
> Type Stack = [2, 2, 2, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, None]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
expresion: 122
expresion: 122
condition: 122
PUSH JUMP :
[69, 69, 74]
print 124
doBlock 125
[69, 69, 74]
74
factor: 125
term: 125
factor: 126
term: 126
> Operand Stack = [0, 2001, 'sum', 'sum', 2005]
> Operator Stack = [14]
> Type Stack = [2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, None]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
exp: 126
exp: 126
ASSIGN A: 126
assignment: 126
+=
factor: 127
term: 127
exp: 127
+=
> Operand Stack = [0, 2001, 'sum', 'sum', 2006]
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, None]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
factor: 127
term: 127
factor: 128
term: 128
> Operand Stack = [0, 2001, 'sum', 'sum', 2007]
> Operator Stack = [14]
> Type Stack = [2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, None]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
exp: 128
exp: 128
ASSIGN A: 128
assignment: 128
ASSIGN A: 129
assignment: 129
factor: 130
term: 130
exp: 130
doBlock 131
for131
cycle: 131
ASSIGN A: 132
assignment: 132
print 133
factor: 133
term: 133
exp: 133
print 134
factor: 135
term: 135
exp: 135
------------------------------------------> 88
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum']
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2]
Function queue
test: 138
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum']
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2]
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum']
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2]
Function queue
test: 143
Function queue
test: 146
Function queue
test: 153
print 156
Function queue
test: 156
print 160
Function queue
test: 160
Function queue
test: 161
factor: 167
term: 167
exp: 167
factor: 167
term: 167
exp: 167
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 1000]
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 1]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
expresion: 167
expresion: 167
condition: 167
PUSH JUMP :
[94]
factor: 169
term: 169
exp: 169
ASSIGN A: 169
assignment: 169
doBlock 170
[94]
94
+=
factor: 170
factor: 170
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'xpos', 'xpos', 2003]
> Operator Stack = [12]
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
factor: 170
term: 170
factor: 170
term: 170
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'xpos', 'xpos', 2003, 2004]
> Operator Stack = [12, 3, 12]
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
exp: 170
exp: 170
expresion: 170
condition: 170
factor: 170
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'xpos', 'xpos', 2005]
> Operator Stack = [12]
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
98:	[3, 2003, 2004, 2005]
factor: 170
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'xpos', 'xpos', 2006]
> Operator Stack = [12]
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
98:	[3, 2003, 2004, 2005]
99:	[2, 2005, 5, 2006]
factor: 170
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'xpos', 'xpos', 2007]
> Operator Stack = [12]
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
98:	[3, 2003, 2004, 2005]
99:	[2, 2005, 5, 2006]
100:	[3, 2006, 2, 2007]
term: 170
term: 170
term: 170
term: 170
term: 170
exp: 170
expresion: 170
condition: 170
factor: 171
term: 171
exp: 171
+=
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'xpos', 2008]
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
98:	[3, 2003, 2004, 2005]
99:	[2, 2005, 5, 2006]
100:	[3, 2006, 2, 2007]
101:	[0, 'xpos', 2007, 2008]
+=
factor: 172
term: 172
exp: 172
+=
> Operand Stack = [0, 2001, 'sum', 'sum', 'sum', '"hello"', 10, 10, 1000, 1000, 100, 100, 'ypos', 2009]
> Operator Stack = []
> Type Stack = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2]
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
98:	[3, 2003, 2004, 2005]
99:	[2, 2005, 5, 2006]
100:	[3, 2006, 2, 2007]
101:	[0, 'xpos', 2007, 2008]
102:	[14, 2008, None, 'xpos']
103:	[0, 'ypos', 1, 2009]
doBlock 174
cycle: 174
factor: 177
term: 177
exp: 177
factor: 177
term: 177
exp: 177
factor: 178
term: 178
exp: 178
factor: 178
term: 178
exp: 178
factor: 179
term: 179
exp: 179
factor: 179
term: 179
exp: 179
factor: 186
term: 186
exp: 186
factor: 186
term: 186
exp: 186
factor: 187
term: 187
exp: 187
factor: 187
term: 187
exp: 187
factor: 188
term: 188
exp: 188
factor: 188
term: 188
exp: 188
factor: 195
term: 195
exp: 195
factor: 203
term: 203
exp: 203
factor: 204
term: 204
exp: 204
factor: 205
term: 205
exp: 205
factor: 207
term: 207
exp: 207
factor: 209
term: 209
exp: 209
factor: 210
term: 210
exp: 210
factor: 211
term: 211
exp: 211
factor: 213
term: 213
exp: 213
factor: 215
term: 215
exp: 215
factor: 216
term: 216
exp: 216
factor: 218
term: 218
exp: 218
factor: 220
term: 220
exp: 220
factor: 222
term: 222
exp: 222
factor: 224
term: 224
exp: 224
factor: 226
term: 226
exp: 226
sumNumbers:
	id: 9,
	name: sumNumbers,
	type: 2
	Params: [2, 2]
	Starting quad index = 64
	VAR - index:
		id: 2003,
		name: index,
		type: 2,
		value: None
		---------
	VAR - sum:
		id: 2002,
		name: sum,
		type: 2,
		value: None
		---------
	VAR - last:
		id: 2001,
		name: last,
		type: 2,
		value: None
		---------
	VAR - s:
		id: 4000,
		name: s,
		type: 4,
		value: None
		---------
	VAR - first:
		id: 2000,
		name: first,
		type: 2,
		value: None
		---------
printArray:
	id: 7,
	name: printArray,
	type: 0
	Params: [2]
	Starting quad index = 59
	VAR - numbers:
		id: 2000,
		name: numbers,
		type: 2,
		value: None
		---------
sumTimes:
	id: 8,
	name: sumTimes,
	type: 2
	Params: [2, 2]
	Starting quad index = 60
	VAR - sum:
		id: 2002,
		name: sum,
		type: 2,
		value: None
		---------
	VAR - last:
		id: 2001,
		name: last,
		type: 2,
		value: None
		---------
	VAR - first:
		id: 2000,
		name: first,
		type: 2,
		value: None
		---------
sayText:
	id: 5,
	name: sayText,
	type: 0
	Params: [4]
	Starting quad index = 55
	VAR - text:
		id: 4000,
		name: text,
		type: 4,
		value: None
		---------
	VAR - exam:
		id: 4001,
		name: exam,
		type: 4,
		value: None
		---------
addOne:
	id: 6,
	name: addOne,
	type: 2
	Params: [2]
	Starting quad index = 57
	VAR - number:
		id: 2000,
		name: number,
		type: 2,
		value: None
		---------
example:
	id: 3,
	name: example,
	type: 3
	Params: [2, 2, 3]
	Starting quad index = 48
	VAR - y:
		id: 2001,
		name: y,
		type: 2,
		value: None
		---------
	VAR - x:
		id: 2000,
		name: x,
		type: 2,
		value: None
		---------
	VAR - z:
		id: 3000,
		name: z,
		type: 3,
		value: None
		---------
emptyFunc:
	id: 2,
	name: emptyFunc,
	type: 0
	Params: []
	Starting quad index = 47
program:
	id: 0,
	name: program,
	type: 0
	Params: []
	Starting quad index = None
	VAR - a:
		id: 2000,
		name: a,
		type: 2,
		value: None
		---------
	VAR - arr:
		ARRAY! 
		id: 2001,
		name: arr,
		type: 2,
		length: 0
		[]
		---------
	VAR - global:
		id: 2002,
		name: global,
		type: 2,
		value: None
		---------
	VAR - arr2:
		ARRAY! 
		id: 3000,
		name: arr2,
		type: 3,
		length: 9
		[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
		---------
light:
	id: 10,
	name: light,
	type: 0
	Params: []
	Starting quad index = 88
	VAR - numberOne:
		id: 2000,
		name: numberOne,
		type: 2,
		value: None
		---------
	VAR - xpos:
		id: 2001,
		name: xpos,
		type: 2,
		value: None
		---------
	VAR - ypos:
		id: 2002,
		name: ypos,
		type: 2,
		value: None
		---------
verifyAndOr:
	id: 1,
	name: verifyAndOr,
	type: 0
	Params: []
	Starting quad index = 1
	VAR - a:
		id: 4000,
		name: a,
		type: 4,
		value: None
		---------
	VAR - i:
		id: 2003,
		name: i,
		type: 2,
		value: None
		---------
	VAR - b:
		id: 4001,
		name: b,
		type: 4,
		value: None
		---------
	VAR - j:
		id: 2004,
		name: j,
		type: 2,
		value: None
		---------
noRetArg:
	id: 4,
	name: noRetArg,
	type: 0
	Params: [2]
	Starting quad index = 53
	VAR - num:
		id: 2000,
		name: num,
		type: 2,
		value: None
		---------
	VAR - num2:
		id: 2001,
		name: num2,
		type: 2,
		value: None
		---------
Quads ===============================
0:	[14, 0, None, 'global']
1:	[14, 3, None, 'j']
2:	[14, 2, None, 'i']
3:	[0, 'j', 'i', 2005]
4:	[14, 2005, None, 'j']
5:	[0, 'i', 2, 2006]
6:	[14, 2006, None, 'i']
7:	[14, '"LOL"', None, 'a']
8:	[4, 2, 3, 1000]
9:	[15, 1000, None, 13]
10:	[14, '"ifelse"', None, 'a']
11:	[23, None, None, '"Truestuff"']
12:	[17, None, None, 15]
13:	[14, '"else"', None, 'a']
14:	[23, None, None, '"OTherStuff"']
15:	[14, '"COMIENZOELIF"', None, 'b']
16:	[4, 27, 35, 1001]
17:	[15, 1001, None, 20]
18:	[14, '"ifelseElif"', None, 'a']
19:	[23, None, None, '"Truestuff"']
20:	[4, 4, 2, 1002]
21:	[15, 1002, None, 25]
22:	[14, '"elif"', None, 'a']
23:	[23, None, None, '"OTherStuff"']
24:	[17, None, None, 26]
25:	[14, '"else2"', None, 'a']
26:	[14, '"TERMINOELIF"', None, 'b']
27:	[4, 1, 2, 1003]
28:	[2, 3, 4.8, 3001]
29:	[5, 3001, 9, 1004]
30:	[10, 1003, 1004, 1005]
31:	[15, 1005, None, 34]
32:	[14, '"ifsolo"', None, 'a']
33:	[23, None, None, '"true"']
34:	[0, 1, 4.0, 3002]
35:	[5, 3002, 5, 1006]
36:	[9, 4, 2, 1007]
37:	[5, 4, 3, 1008]
38:	[11, 1007, 1008, 1009]
39:	[10, 1006, 1009, 1010]
40:	[7, 5, 2, 1011]
41:	[10, 1010, 1011, 1012]
42:	[5, 4, 3, 1013]
43:	[11, 1012, 1013, 1014]
44:	[15, 1014, None, 46]
45:	[23, None, None, '"false"']
46:	[18, None, None, None]
47:	[18, None, None, None]
48:	[4, 1, 2, 1000]
49:	[15, 1000, None, 51]
50:	[23, None, None, '"true"']
51:	[23, None, None, '"This"']
52:	[18, None, None, None]
53:	[23, None, None, 'num2']
54:	[18, None, None, None]
55:	[23, None, None, 'text']
56:	[18, None, None, None]
57:	[0, 'number', 1, 2001]
58:	[18, None, None, None]
59:	[18, None, None, None]
60:	[14, 0, None, 'sum']
61:	[0, 'sum', 1, 2003]
62:	[14, 2003, None, 'sum']
63:	[18, None, None, None]
64:	[14, 0, None, 'sum']
65:	[14, 0, None, 'index']
66:	[14, '"STARTFOR"', None, 's']
67:	[14, 'first', None, 'sum']
68:	[4, 'index', 'sum', 1000]
69:	[15, 1000, None, 84]
70:	[0, 'index', 1, 2004]
71:	[14, 2004, None, 'index']
72:	[14, '"INSIDEFIRSTFOR"', None, 's']
73:	[5, 'sum', 2, 1001]
74:	[15, 1001, None, 76]
75:	[23, None, None, '"Greater"']
76:	[0, 23, 'index', 2005]
77:	[14, 2005, None, 'sum']
78:	[0, 'sum', 'index', 2006]
79:	[14, 2006, None, 'sum']
80:	[0, 'sum', 'index', 2007]
81:	[14, 2007, None, 'sum']
82:	[14, '"BEFORERETURN"', None, 's']
83:	[17, None, None, 68]
84:	[14, '"ENDFOR"', None, 's']
85:	[23, None, None, '"true"']
86:	[23, None, None, 'sum']
87:	[18, None, None, None]
88:	[14, 25, None, 'numberOne']
89:	[14, 0, None, 'xpos']
90:	[14, 0, None, 'ypos']
91:	[23, None, None, 20]
92:	[23, None, None, 20]
93:	[5, 3, 5, 1000]
94:	[15, 1000, None, 96]
95:	[14, 0, None, 'xpos']
96:	[2, 7, 8, 2003]
97:	[0, 9, 9, 2004]
98:	[3, 2003, 2004, 2005]
99:	[2, 2005, 5, 2006]
100:	[3, 2006, 2, 2007]
101:	[0, 'xpos', 2007, 2008]
102:	[14, 2008, None, 'xpos']
103:	[0, 'ypos', 1, 2009]
104:	[14, 2009, None, 'ypos']
Successful
