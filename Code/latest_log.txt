\n[Fri Apr  8 00:13:15 CDT 2016] =========================================== 
WARNING: Token 'VAR_FRACTION' defined, but not used
WARNING: Token 'FRACTION' defined, but not used
WARNING: Token 'VAR_BOOLEAN' defined, but not used
WARNING: light_parser.py:522: Rule 'push_num' defined, but not used
WARNING: There are 3 unused tokens
WARNING: There is 1 unused rule
WARNING: Symbol 'var_b' is unreachable
WARNING: Symbol 'var_a' is unreachable
WARNING: Symbol 'push_num' is unreachable
Generating LALR tables
WARNING: 7 shift/reduce conflicts
WARNING: 13 reduce/reduce conflicts
WARNING: reduce/reduce conflict in state 273 resolved using rule (push_id -> <empty>)
WARNING: rejected rule (print_a -> VAR_IDENTIFIER verify_variable) in state 273
WARNING: reduce/reduce conflict in state 308 resolved using rule (assgn_a -> VAR_IDENTIFIER verify_variable)
WARNING: rejected rule (push_id -> <empty>) in state 308
WARNING: Rule (print_a -> VAR_IDENTIFIER verify_variable) is never reduced
ASSIGN A: 17
assignment: 17
factor: 17
term: 17
exp: 17
>>>>>>>>>>>>>> AGUAS []
OPERATOR STACK = [4]
factor: 17
term: 17
exp: 17
expresion: 17
condition: 17
print 19
doBlock 21
conditionBlock 21
factor: 21
term: 21
exp: 21
>>>>>>>>>>>>>> AGUAS [4]
OPERAND STACK INSIDE = [2, 3, 1]

Quads ===============================
[[4, 3, 1, 1000]]
OPERATOR STACK = [4]
factor: 21
term: 21
exp: 21
expresion: 21
OPERATOR STACK = [4, 10]
OPERATOR STACK = [4, 10, 12]
OPERATOR STACK = [4, 10, 12, 12]
factor: 21
OPERATOR STACK = [4, 10, 12, 12, 2]
factor: 21
OPERAND STACK INSIDE = [2, 2, 3, 4.8]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001]]
term: 21
term: 21
exp: 21
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12]
expresion: 21
condition: 21
factor: 21
term: 21
exp: 21
>>>>>>>>>>>>>> AGUAS [4, 10, 12]
OPERATOR STACK = [4, 10, 12, 5]
factor: 21
term: 21
exp: 21
expresion: 21
condition: 21
factor: 21
term: 21
exp: 21
>>>>>>>>>>>>>> AGUAS [4, 10, 12]
expresion: 21
condition: 21
condition: 21
print 23
doBlock 26
conditionBlock 26
OPERATOR STACK = [4, 10, 12, 12]
factor: 26
term: 26
OPERATOR STACK = [4, 10, 12, 12, 0]
factor: 26
term: 26
OPERAND STACK INSIDE = [2, 2, 9, 1, 4.0]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002]]
exp: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12]
OPERATOR STACK = [4, 10, 12, 12, 5]
factor: 26
term: 26
exp: 26
expresion: 26
condition: 26
factor: 26
term: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12]
expresion: 26
OPERATOR STACK = [4, 10, 12, 12, 10]
OPERATOR STACK = [4, 10, 12, 12, 10, 12]
factor: 26
term: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9]
factor: 26
term: 26
exp: 26
expresion: 26
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 11]
factor: 26
term: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 11]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 11, 5]
factor: 26
term: 26
exp: 26
expresion: 26
condition: 26
condition: 26
factor: 26
term: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 11]
expresion: 26
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 4, 3]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10]
factor: 26
term: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7]
factor: 26
term: 26
exp: 26
expresion: 26
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11]
factor: 26
term: 26
exp: 26
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5]
factor: 26
term: 26
exp: 26
expresion: 26
condition: 26
condition: 26
condition: 26
condition: 26
print 28
doBlock 30
conditionBlock 30
factor: 37
term: 37
exp: 37
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5]
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 3, 1]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 4]
factor: 37
term: 37
exp: 37
expresion: 37
condition: 37
print 39
doBlock 41
conditionBlock 41
print 42
factor: 43
term: 43
exp: 43
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2']
factor: 46
term: 46
exp: 46
print 47
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text']
factor: 51
term: 51
exp: 51
print 52
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number']
factor: 54
term: 54
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 4, 0]
factor: 55
term: 55
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 'number', 1]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001]]
exp: 55
exp: 55
factor: 69
term: 69
exp: 69
doBlock 71
cycle: 71
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum']
factor: 72
term: 72
exp: 72
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'index']
factor: 77
term: 77
exp: 77
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 4]
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'index', 'index']

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 4]
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum']
factor: 77
term: 77
exp: 77
expresion: 77
condition: 77
for77
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum']
factor: 78
term: 78
exp: 78
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 4]
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum', <built-in function sum>]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5]
factor: 78
term: 78
exp: 78
expresion: 78
condition: 78
print 80
doBlock 81
conditionBlock 81
factor: 81
term: 81
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 0]
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index']
factor: 82
term: 82
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index']

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004]]
exp: 82
exp: 82
ASSIGN A: 82
assignment: 82
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index']
factor: 83
term: 83
exp: 83
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum']
factor: 83
term: 83
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 0]
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'index']
factor: 84
term: 84
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'index', 'index']

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005]]
exp: 84
exp: 84
ASSIGN A: 84
assignment: 84
doBlock 85
cycle: 85
print 86
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum']
factor: 86
term: 86
exp: 86
print 87
OPERAND STACK = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum']
factor: 88
term: 88
exp: 88
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 91
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 96
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 99
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 106
print 109
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 109
print 113
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 113
Function queue
['light', 'sumNumbers', 'sumTimes', 'printArray', 'addOne', 'sayText', 'noRetArg', 'example', 'verifyAndOr', 'coordinates', 'window_size', 'program']
test: 114
factor: 120
term: 120
exp: 120
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5]
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 3]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005], [5, <built-in function sum>, 3, 1000]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5]
factor: 120
term: 120
exp: 120
expresion: 120
condition: 120
factor: 122
term: 122
exp: 122
ASSIGN A: 122
assignment: 122
doBlock 123
conditionBlock 123
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12]
factor: 123
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 2]
factor: 123
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum', 5, 0, 7, 8]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005], [5, <built-in function sum>, 3, 1000], [2, 7, 8, 2003]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 3]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 3, 12]
factor: 123
term: 123
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 3, 12, 0]
factor: 123
term: 123
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum', 5, 0, 9, 9]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005], [5, <built-in function sum>, 3, 1000], [2, 7, 8, 2003], [0, 9, 9, 2004]]
exp: 123
exp: 123
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 3, 12]
expresion: 123
condition: 123
factor: 123
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum', 5, 0]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005], [5, <built-in function sum>, 3, 1000], [2, 7, 8, 2003], [0, 9, 9, 2004], [3, 5, 0, 2005]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 2]
factor: 123
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 'sum', 5]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005], [5, <built-in function sum>, 3, 1000], [2, 7, 8, 2003], [0, 9, 9, 2004], [3, 5, 0, 2005], [2, 'sum', 5, 2006]]
OPERATOR STACK = [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12, 3]
factor: 123
OPERAND STACK INSIDE = [2, 2, 9, 5, 4, 2, 5, 2, 4, 2, 0, 'num2', 'num2', 'text', 'text', 'number', 1, 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2, 23, 'index', 'index', 'sum', <built-in function sum>, 'sum', <built-in function sum>, 2]

Quads ===============================
[[4, 3, 1, 1000], [2, 3, 4.8, 3001], [0, 1, 4.0, 3002], [11, 4, 3, 1001], [5, 3, 1, 1000], [0, 'number', 1, 2001], [4, 'index', 'index', 1000], [4, 'sum', <built-in function sum>, 1001], [0, 'index', 'index', 2004], [0, 'index', 'index', 2005], [5, <built-in function sum>, 3, 1000], [2, 7, 8, 2003], [0, 9, 9, 2004], [3, 5, 0, 2005], [2, 'sum', 5, 2006], [3, <built-in function sum>, 2, 2007]]
term: 123
term: 123
term: 123
term: 123
term: 123
exp: 123
>>>>>>>>>>>>>> AGUAS [4, 10, 12, 12, 10, 12, 9, 10, 7, 11, 5, 12]
expresion: 123
condition: 123
factor: 124
term: 124
exp: 124
factor: 125
term: 125
exp: 125
doBlock 127
cycle: 127
factor: 130
term: 130
exp: 130
factor: 130
term: 130
exp: 130
factor: 131
term: 131
exp: 131
factor: 131
term: 131
exp: 131
factor: 132
term: 132
exp: 132
factor: 132
term: 132
exp: 132
factor: 139
term: 139
exp: 139
factor: 139
term: 139
exp: 139
factor: 140
term: 140
exp: 140
factor: 140
term: 140
exp: 140
factor: 141
term: 141
exp: 141
factor: 141
term: 141
exp: 141
factor: 148
term: 148
exp: 148
factor: 156
term: 156
exp: 156
factor: 157
term: 157
exp: 157
factor: 158
term: 158
exp: 158
factor: 160
term: 160
exp: 160
factor: 162
term: 162
exp: 162
factor: 163
term: 163
exp: 163
factor: 164
term: 164
exp: 164
factor: 166
term: 166
exp: 166
factor: 168
term: 168
exp: 168
factor: 169
term: 169
exp: 169
factor: 171
term: 171
exp: 171
factor: 173
term: 173
exp: 173
factor: 175
term: 175
exp: 175
factor: 177
term: 177
exp: 177
factor: 179
term: 179
exp: 179
sumNumbers:
	id: 8,
	name: sumNumbers,
	type: 2
	VAR - index:
		id: 2003,
		name: index,
		type: 2,
		value: None
		---------
	VAR - sum:
		id: 2002,
		name: sum,
		type: 2,
		value: None
		---------
	VAR - last:
		id: 2001,
		name: last,
		type: 2,
		value: None
		---------
	VAR - first:
		id: 2000,
		name: first,
		type: 2,
		value: None
		---------
printArray:
	id: 6,
	name: printArray,
	type: 0
	VAR - numbers:
		id: 2000,
		name: numbers,
		type: 2,
		value: None
		---------
sumTimes:
	id: 7,
	name: sumTimes,
	type: 2
	VAR - sum:
		id: 2002,
		name: sum,
		type: 2,
		value: None
		---------
	VAR - last:
		id: 2001,
		name: last,
		type: 2,
		value: None
		---------
	VAR - first:
		id: 2000,
		name: first,
		type: 2,
		value: None
		---------
sayText:
	id: 4,
	name: sayText,
	type: 0
	VAR - text:
		id: 4000,
		name: text,
		type: 4,
		value: None
		---------
	VAR - exam:
		id: 4001,
		name: exam,
		type: 4,
		value: None
		---------
addOne:
	id: 5,
	name: addOne,
	type: 2
	VAR - number:
		id: 2000,
		name: number,
		type: 2,
		value: None
		---------
example:
	id: 2,
	name: example,
	type: 3
	VAR - y:
		id: 2001,
		name: y,
		type: 2,
		value: None
		---------
	VAR - x:
		id: 2000,
		name: x,
		type: 2,
		value: None
		---------
	VAR - z:
		id: 3000,
		name: z,
		type: 3,
		value: None
		---------
program:
	id: 0,
	name: program,
	type: 0
	VAR - a:
		id: 2000,
		name: a,
		type: 2,
		value: None
		---------
	VAR - arr:
		ARRAY! 
		id: 2001,
		name: arr,
		type: 2,
		length: 0
		[]
		---------
	VAR - global:
		id: 2002,
		name: global,
		type: 2,
		value: None
		---------
	VAR - arr2:
		ARRAY! 
		id: 3000,
		name: arr2,
		type: 3,
		length: 9
		[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
		---------
light:
	id: 9,
	name: light,
	type: 0
	VAR - numberOne:
		id: 2000,
		name: numberOne,
		type: 2,
		value: None
		---------
	VAR - xpos:
		id: 2001,
		name: xpos,
		type: 2,
		value: None
		---------
	VAR - ypos:
		id: 2002,
		name: ypos,
		type: 2,
		value: None
		---------
noRetArg:
	id: 3,
	name: noRetArg,
	type: 0
	VAR - num:
		id: 2000,
		name: num,
		type: 2,
		value: None
		---------
	VAR - num2:
		id: 2001,
		name: num2,
		type: 2,
		value: None
		---------
verifyAndOr:
	id: 1,
	name: verifyAndOr,
	type: 0
	VAR - a:
		id: 4000,
		name: a,
		type: 4,
		value: None
		---------
Successful
